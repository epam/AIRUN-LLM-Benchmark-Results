evaluation_steps:
  accuracy:
  - Verify the component is implemented using React 18.x
  - Confirm all component code is written in TypeScript with proper type definitions
  - Ensure the component includes an index.css file for styling
  - Validate the component has clean, production-ready code without any TODO comments
  - Check that the component uses proper React state management for selected items and dropdown visibility
  - Verify the component is reusable by accepting customizable props
  - Ensure the component implements proper keyboard event handlers for navigation and selection
  - Confirm the component follows React best practices for refs and DOM interactions
  - Verify the component implements proper focus management techniques
  - Check that the component uses appropriate ARIA attributes for accessibility
  - Ensure the code is free of console errors and warnings
  - Verify there are no unnecessary re-renders in the component
  completeness:
  - Verify the component renders a dropdown select UI element
  - Confirm the component includes a search input within the dropdown
  - Verify the component supports selecting a single item from the dropdown
  - Ensure the dropdown can be navigated using keyboard arrow keys
  - Verify items can be selected using the Enter key
  - Confirm the dropdown visibility can be toggled using the Enter key when the component is focused
  - Verify focus returns to the select component when the dropdown closes
  - Ensure the dropdown closes when an item is selected via mouse click
  - Confirm the dropdown closes when an item is selected via keyboard
  - Verify the dropdown closes when the Escape key is pressed
  - Ensure the dropdown closes when clicking outside the component
  - Confirm the dropdown opens on Enter key press when the component is focused
metadata:
  category: GenerateBaseComponent
  experiment: component_generation
  scenario_id: 1
