evaluation_steps:
  accuracy:
  - Verify that Jest and React Testing Library are properly set up in the test file
  - Confirm that test cases are properly isolated and do not have interdependencies
  - Verify that DOM events are simulated using proper React Testing Library methods
  - Validate that accessibility attributes are being tested appropriately
  - Ensure mocks are used for external dependencies where appropriate
  - Verify proper use of async/await for asynchronous testing where needed
  - Check that all assertions use appropriate Jest matchers
  - Verify that tests include proper cleanup after each test case
  - Ensure test descriptions clearly indicate what functionality is being tested
  - Confirm that the test file follows best practices for organizing test cases (describe/it blocks)
  - Validate that all event handlers are tested using appropriate simulation methods
  - Verify that the test environment correctly simulates both mouse and keyboard interactions
  - Ensure tests for touch events properly simulate mobile interactions
  completeness:
  - Verify tests for basic component rendering with default props exist
  - Ensure tests for keyboard navigation functionality (arrow keys, tab, enter, escape) are present
  - Validate presence of tests for mouse interactions (clicking, hovering)
  - Confirm test coverage for both controlled and uncontrolled component behavior
  - Verify tests for state changes when selecting, removing, and clearing values
  - Ensure tests for menu opening/closing behavior are implemented
  - Validate test coverage for option filtering and searching functionality
  - Confirm tests for multi-select behavior exist
  - Verify tests for ARIA attributes and screen reader compatibility
  - Ensure edge cases like empty options are tested
  - Validate tests for loading and error states
  - Verify tests for disabled options/states
  - Confirm tests for large option sets to verify performance
  - Ensure focus management during interactions is properly tested
  - Verify tests for placeholder and value rendering
  - Ensure test coverage for custom formatOptionLabel implementations
  - Verify callback function testing (onChange, onInputChange, onMenuOpen, onMenuClose)
  - Validate tests for indicator components (dropdown, clear, loading)
metadata:
  category: WriteTestsForActualCode_ReactSelect_extra_high_high
  experiment: test_generation
  repository: react_select
  scenario_id: 23
