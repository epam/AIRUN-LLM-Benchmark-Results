import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggleTodo, deleteTodo, editTodo } from '../store/todoSlice';\nimport { Todo } from '../models/todoModel';\n\ninterface TodoItemProps {\n  todo: Todo;\n}\n\nexport const TodoItem: React.FC<TodoItemProps> = ({ todo }) => {\n  const dispatch = useDispatch();\n  const [editText, setEditText] = useState(todo.title);\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n    setEditText(todo.title);\n  }, [todo.title]);\n\n  const handleEdit = () => setEditing(true);\n\n  const handleSubmit = () => {\n    const val = editText.trim();\n    if (val) {\n      dispatch(editTodo({ id: todo.id, text: val }));\n      setEditing(false);\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      setEditText(todo.title);\n      setEditing(false);\n    } else if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEditText(event.target.value);\n  };\n\n  useEffect(() => {\n    if (editing) {\n      const node = document.getElementById(`editField-${todo.id}`) as HTMLInputElement;\n      if (node) {\n        node.focus();\n        node.setSelectionRange(node.value.length, node.value.length);\n      }\n    }\n  }, [editing]);\n\n  return (\n    <li className={todo.completed ? 'completed' : ''} style={{ display: editing ? 'none' : 'block' }}>\n      <div className="view">\n        <input\n          className="toggle"\n          type="checkbox"\n          checked={todo.completed}\n          onChange={() => dispatch(toggleTodo(todo.id))}\n        />\n        <label onDoubleClick={handleEdit}>
          {todo.title}\n        </label>\n        <button className="destroy" onClick={() => dispatch(deleteTodo(todo.id))} />\n      </div>\n      <input\n        id={`editField-${todo.id}`}\n        className="edit"\n        value={editText}\n        onBlur={handleSubmit}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        style={{ display: editing ? 'block' : 'none' }}\n      />\n    </li>\n  );\n};