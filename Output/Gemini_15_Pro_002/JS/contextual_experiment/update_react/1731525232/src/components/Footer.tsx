import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../store\";\nimport { clearCompleted, setFilter } from \"../slices/todosSlice\";\n\nconst Footer: React.FC = () => {\n  const todos = useSelector((state: RootState) => state.todos.todos);\n  const activeCount = todos.filter((todo) => !todo.completed).length;\n  const completedCount = todos.length - activeCount;\n  const filter = useSelector((state: RootState) => state.todos.filter);\n  const dispatch = useDispatch<AppDispatch>();\n\n  const handleClearCompleted = () => {\n    dispatch(clearCompleted());\n  };\n\n  const handleFilterChange = (newFilter: \"all\" | \"active\" | \"completed\">) => {\n    dispatch(setFilter(newFilter));\n  };\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount}</strong> item{activeCount !== 1 && \"s\"} left\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={filter === \"all\" ? \"selected\" : \"\"}\n            onClick={() => handleFilterChange(\"all\")}\n          >\n            All\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"#/active\"\n            className={filter === \"active\" ? \"selected\" : \"\"}\n            onClick={() => handleFilterChange(\"active\")}\n          >\n            Active\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"#/completed\"\n            className={filter === \"completed\" ? \"selected\" : \"\"}\n            onClick={() => handleFilterChange(\"completed\")}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n      {completedCount > 0 && (\n        <button className=\"clear-completed\" onClick={handleClearCompleted}>\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nexport default Footer;