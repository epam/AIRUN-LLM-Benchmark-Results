import React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleTodo, deleteTodo, editTodo } from \"../slices/todosSlice\";\nimport { AppDispatch } from \"../store\";\n\ninterface TodoItemProps {\n  todo: { id: string; title: string; completed: boolean };\n}\n\nconst TodoItem: React.FC<TodoItemProps> = ({ todo }) => {\n  const [editing, setEditing] = useState(false);\n  const [editText, setEditText] = useState(todo.title);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    if (editing && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.setSelectionRange(\n        inputRef.current.value.length,\n        inputRef.current.value.length\n      );\n    }\n  }, [editing]);\n\n  const handleToggle = () => {\n    dispatch(toggleTodo(todo.id));\n  };\n\n  const handleDestroy = () => {\n    dispatch(deleteTodo(todo.id));\n  };\n\n  const handleEdit = () => {\n    setEditing(true);\n  };\n\n  const handleSave = () => {\n    if (editText.trim()) {\n      dispatch(editTodo({ id: todo.id, newTitle: editText.trim() }));\n      setEditing(false);\n    } else {\n      handleDestroy();\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Escape\" || e.key === \"Enter\") {\n      if (e.key === \"Escape\") {\n        setEditText(todo.title);\n      }\n      setEditing(false);\n      if (e.key === \"Enter\") {\n        handleSave();\n      }\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEditText(e.target.value);\n  };\n\n  const handleBlur = () => {\n    handleSave();\n  };\n\n  return (\n    <li className={`${todo.completed ? \"completed\" : \"\"} ${editing ? \"editing\" : \"\"}`}>\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={todo.completed}\n          onChange={handleToggle}\n        />\n        <label onDoubleClick={handleEdit}>{todo.title}</label>\n        <button className=\"destroy\" onClick={handleDestroy}></button>\n      </div>\n      <input\n        ref={inputRef}\n        className=\"edit\"\n        value={editText}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </li>\n  );\n};\n\nexport default TodoItem;