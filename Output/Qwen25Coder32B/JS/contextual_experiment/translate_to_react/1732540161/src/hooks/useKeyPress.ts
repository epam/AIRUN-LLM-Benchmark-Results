import { useEffect, useState } from 'react';\n\nconst useKeyPress = (targetKey: string) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n\n    const downHandler = (event: KeyboardEvent) => {\n        if (event.key === targetKey) {\n            setKeyPressed(true);\n        }\n    };\n\n    const upHandler = (event: KeyboardEvent) => {\n        if (event.key === targetKey) {\n            setKeyPressed(false);\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener('keydown', downHandler);\n        window.addEventListener('keyup', upHandler);\n\n        return () => {\n            window.removeEventListener('keydown', downHandler);\n            window.removeEventListener('keyup', upHandler);\n        };\n    }, []);\n\n    return keyPressed;\n};\n\nexport default useKeyPress;