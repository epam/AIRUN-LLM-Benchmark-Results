import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clearCompleted, setFilter } from '../../store/todoSlice';\nimport { ALL_TODOS, ACTIVE_TODOS, COMPLETED_TODOS } from '../../constants';\nimport classNames from 'classnames';\n\nconst TodoFooter: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector((state: any) => state.todos.items);\n  const filter = useSelector((state: any) => state.todos.filter);\n\n  const activeTodoCount = todos.filter((todo: any) => !todo.completed).length;\n  const completedCount = todos.length - activeTodoCount;\n\n  const handleClearCompleted = () => {\n    dispatch(clearCompleted());\n  };\n\n  const handleSetFilter = (newFilter: string) => {\n    dispatch(setFilter(newFilter));\n  };\n\n  return (\n    <footer className='footer'>\n      <span className='todo-count'>\n        <strong>{activeTodoCount}</strong> item{activeTodoCount !== 1 && 's'} left\n      </span>\n      <ul className='filters'>\n        <li>\n          <a\n            href='#/'\n            className={classNames({ selected: filter === ALL_TODOS })}\n            onClick={() => handleSetFilter(ALL_TODOS)}\n          >\n            All\n          </a>\n        </li>\n        {' '}\n        <li>\n          <a\n            href='#/active'\n            className={classNames({ selected: filter === ACTIVE_TODOS })}\n            onClick={() => handleSetFilter(ACTIVE_TODOS)}\n          >\n            Active\n          </a>\n        </li>\n        {' '}\n        <li>\n          <a\n            href='#/completed'\n            className={classNames({ selected: filter === COMPLETED_TODOS })}\n            onClick={() => handleSetFilter(COMPLETED_TODOS)}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n      {completedCount > 0 && (\n        <button className='clear-completed' onClick={handleClearCompleted}>\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nexport default TodoFooter;