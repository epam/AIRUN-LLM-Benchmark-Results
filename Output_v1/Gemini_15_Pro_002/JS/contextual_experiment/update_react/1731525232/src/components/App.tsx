import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../store\";\nimport { addTodo, toggleAll } from \"../slices/todosSlice\";\nimport TodoItem from \"../components/TodoItem\";\nimport Footer from \"../components/Footer\";\n\nconst App: React.FC = () => {\n  const todos = useSelector((state: RootState) => state.todos.todos);\n  const filter = useSelector((state: RootState) => state.todos.filter);\n  const dispatch = useDispatch<AppDispatch>();\n  const [newTodoText, setNewTodoText] = useState(\"\");\n\n  const handleNewTodoKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\" && newTodoText.trim()) {\n      dispatch(addTodo(newTodoText.trim()));\n      setNewTodoText(\"\");\n    }\n  };\n\n  const handleToggleAll = () => {\n    dispatch(toggleAll());\n  };\n\n  const filteredTodos = todos.filter((todo) => {\n    switch (filter) {\n      case \"active\":\n        return !todo.completed;\n      case \"completed\":\n        return todo.completed;\n      default:\n        return true;\n    }\n  });\n\n  return (\n    <div>\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={newTodoText}\n          onChange={(e) => setNewTodoText(e.target.value)}\n          onKeyDown={handleNewTodoKeyDown}\n          autoFocus\n        />\n      </header>\n      {todos.length > 0 && (\n        <section className=\"main\">\n          <input\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={todos.every((todo) => todo.completed)}\n            onChange={handleToggleAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <ul className=\"todo-list\">\n            {filteredTodos.map((todo) => (\n              <TodoItem key={todo.id} todo={todo} />\n            ))}\n          </ul>\n        </section>\n      )}\n      {(todos.length > 0 || filteredTodos.length > 0) && <Footer />}\n    </div>\n  );\n};\n\nexport default App;